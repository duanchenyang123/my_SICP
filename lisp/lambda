(define (sum term a next b) 
  (if (> a b) 
      0
      (+ (term a)
         (sum term (next a) next b))))

(define (pi-sum a b)
  (sum (lambda (x) (/ 1.0 (* x (+ x 2))))
       a
       (lambda (x) (+ x 4))
       b))

(define (integral f a b x)
  (* (sum f (+ a (/ dx 2.0)) (lambda (x) (+ x dx)) b) dx))



;;; a = 1 + xy b = 1 - y  f(x, y) = xa^2 + yb + ab
(define (f x y)
  (define (f-helper a b)
    (+ (* x (square a))
       (* y b)
       (* a b)))
  (f-helper (+ 1 (* x y))
            (- 1 y)))


(define (f x y)
  ((lambda (a b)
      (+ (* x (square a))
         (* y b)
         (* a b)))
    (+ a (* x y))
    (- 1 y)))

(define (f x y) 
  (let ((a (+ 1 (* x y)))
        (b (- 1 y)))
    (+ (* x (square a))
       (* y b)
       (* a b))))



;;;1.34  
(define (f g) (g 2))   
        
(f square)   ;;; 4

(f (lambda (z) (* z (+ z 1)))) ;;; 6

(f f)  (f 2) (2 2)  ;;;2 is not proc




